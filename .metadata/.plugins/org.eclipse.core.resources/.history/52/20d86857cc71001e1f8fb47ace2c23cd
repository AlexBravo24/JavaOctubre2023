package com;

public class Pan {

	
	//la clase nos va a servir como una plantilla
	//o molde para crear objetos
	//en este ejemplo, para crear diversos panes
	
	//tenemos que modelar a nuestro objeto
	//iniciando por definir sus atributos
	
	//tamaño, color, relleno, textura, sabor, nombre
	//ingredientes
	
	String nombre;
	String ingredientes;
	int tamaño;
	String color;
	String relleno;
	String textura;
	String sabor;
	double peso;
	
	//metodos constructores
	//estos nos van a permitir construir o generar a nuestro objeto como tal
	
	//constructor vacio
	//el cual sirve como un comodin o "dummie"
	//para generar a nuestro objeto, sin necesidad de iniciarlo con sus atributos
	
	public Pan() {
		
	}

	//metodo constructor con todod los parametros o atributos
	//nos permite crear un objeto,pero con todos sus atributos inicializados
	
	//podemos generar mas constructores, uno que nos pida solo nombre y tamaño
	//uno que pida solo nombre, otro que pida nombre y color, etc
	//no hay un limite de constructores a utilizar, sin embargo los convencionalmente utilizados
	//son el vacio y el que tiene todos los parametros
	
	
	public Pan(String nombre, String ingredientes, int tamaño, String color, String relleno, String textura,
			String sabor, double peso) {
		super();
		this.nombre = nombre;
		this.ingredientes = ingredientes;
		this.tamaño = tamaño;
		this.color = color;
		this.relleno = relleno;
		this.textura = textura;
		this.sabor = sabor;
		this.peso = peso;
	}

	//metodo toString(), nos va a permitir convertir los valores de nuestro objeto
	//en formato string y poder visualizarlos o mandarlos a imprimir en consola
	//es decir, figuremos que actua como una radiografia para poder
	//visualizar de que se compone nuestro objeto
	//tiene la anotacion @override, porque es un metodo propio de la clase Oject
	//y se va a sobreescribir de acuerdo al objeto que estemos definiendo
		
	@Override
	public String toString() {
		return "Pan [nombre=" + nombre + ", ingredientes=" + ingredientes + ", tamaño=" + tamaño + ", color=" + color
				+ ", relleno=" + relleno + ", textura=" + textura + ", sabor=" + sabor + ", peso=" + peso + "]";
	}
	
	
	
	
	
}
